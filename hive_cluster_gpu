#!/usr/bin/env python3

import sys
import os
import pymongo
import datetime as dt
import calendar

def getModules():
    if 'HIVE_DB_URI' in os.environ:
        uri = os.environ['HIVE_DB_URI']
    c = pymongo.MongoClient(uri)
    db_name = uri.split('/')[-1].strip()
    proj = {"$project" : {"_id" : 1.0, "description" : "$description", "name" : "$name", "hardware" : "$hardware"}}
    return c[db_name].get_collection("hiveavailablemodules").aggregate([proj])

def getPendingJobs(module):
    if 'HIVE_DB_URI' in os.environ:
        uri = os.environ['HIVE_DB_URI']
    c = pymongo.MongoClient(uri)
    db_name = uri.split('/')[-1].strip()
    return c[db_name].get_collection("hivejobs").find({"state":"pending", "current_module_name":module.replace("hive_", "hive.")}).count()

def getActiveJobs(module):
    if 'HIVE_DB_URI' in os.environ:
        uri = os.environ['HIVE_DB_URI']
    c = pymongo.MongoClient(uri)
    db_name = uri.split('/')[-1].strip()
    return c[db_name].get_collection("hivejobs").find({"state":"active", "current_module_name":module.replace("hive_", "hive.")}).count()

def getGPUs(now):
    if 'HIVE_DB_URI' in os.environ:
        uri = os.environ['HIVE_DB_URI']
    c = pymongo.MongoClient(uri)
    db_name = uri.split('/')[-1].strip()
    gpuCursor = c[db_name].get_collection("hivemachines").aggregate([{"$match": {"keepalive_expiration_time": {"$gt": now}, "hardware.gpu.count": {"$gt": 0}}},
                                                                     {"$group": {"_id": "null", "total_gpus": {"$sum": "$hardware.gpu.count"}}}])
    numGPUs = 0
    for j in gpuCursor:
        numGPUs += j["total_gpus"]
    return numGPUs

def doData():
    current = dt.datetime.utcnow()
    now = calendar.timegm(current.timetuple())
    pendingJobs = {}
    activeJobs = {}
    numAvailable = getGPUs(now)
    for j in getModules():
        if j["hardware"]["gpu"] > 0:
            pendingJobs[j["_id"]] = getPendingJobs(j["_id"])
            activeJobs[j["_id"]] = getActiveJobs(j["_id"])
            numAvailable -= activeJobs[j["_id"]]
    for jkey, jval in list(activeJobs.items()):
        print(( jkey + "active.value " + str(jval) ))
    print(( "unused_gpus.value " + str(numAvailable) ))
    for jkey, jval in list(pendingJobs.items()):
        print(( jkey + ".value " + str(jval) ))

def doConfig():
    print("graph_title Hive GPU jobs")
    print("graph_args --base 1000 -l 0")
    print("graph_vlabel Number")
    print("graph_category mongodb")
    print("graph_total total")

    for k in getModules():
        if k["hardware"]["gpu"] > 0:
            kname = k["_id"] + "active"
            print((kname + ".label " + "Active " + k["name"]))
            print((kname + ".info " + "Active " + k["description"]))
            print(kname + ".type GAUGE")
            print(kname + ".min 0")
            print(kname + ".draw AREASTACK")

    kname = "unused_gpus"
    print((kname + ".label " + "Unused GPUs"))
    print((kname + ".info " + "Unused GPUs"))
    print(kname + ".type GAUGE")
    print(kname + ".min 0")
    print(kname + ".draw AREASTACK")

    for k in getModules():
        if k["hardware"]["gpu"] > 0:
            kname = k["_id"]
            print((kname + ".label " + "Pending " + k["name"]))
            print((kname + ".info " + "Pending " + k["description"]))
            print(kname + ".type GAUGE")
            print(kname + ".min 0")
            print(kname + ".draw AREASTACK")


if __name__ == "__main__":
    from os import environ
    if 'HIVE_DB_URI' in environ:
        uri = environ['HIVE_DB_URI']

    if len(sys.argv) > 1 and sys.argv[1] == "config":
        doConfig()
    else:
        doData()
