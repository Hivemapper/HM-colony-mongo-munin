#!/usr/bin/env python

import sys
import os
import pymongo

def getModules():
    if 'HIVE_DB_URI' in os.environ:
        uri = os.environ['HIVE_DB_URI']
    c = pymongo.MongoClient(uri)
    db_name = uri.split('/')[-1].strip()
    proj = {"$project" : {"_id" : 1.0, "description" : "$description", "name" : "$name", "hardware" : "$hardware"}}
    return c[db_name].get_collection("hiveavailablemodules").aggregate([proj])

def getPendingJobs(module):
    if 'HIVE_DB_URI' in os.environ:
        uri = os.environ['HIVE_DB_URI']
    c = pymongo.MongoClient(uri)
    db_name = uri.split('/')[-1].strip()
    if module == "hive_multireg":
        return c[db_name].get_collection("hivejobs").find({"state": "pending",
                                                           "pipeline_name":"waggle_multireg",
                                                           "current_module_name":"hive.georegistration"}).count()
    if module == "hive_georegistration":
        return c[db_name].get_collection("hivejobs").find({"state": "pending",
                                                           "pipeline_name":"waggle",
                                                           "current_module_name": module.replace("_", ".")}).count()
    return c[db_name].get_collection("hivejobs").find({"state":"pending", "current_module_name":module.replace("_", ".")}).count()

def doData():
    jj = {}
    for j in getModules():
        if j["hardware"]["gpu"] == 0:
            jj[j["_id"]] = getPendingJobs(j["_id"])
    for jkey, jval in jj.items():
        print( jkey + ".value " + str(jval) )
    print( "hive_multireg" + ".value " + str(getPendingJobs("hive_multireg")) )

def doConfig():
    print "graph_title Cluster pending CPU jobs"
    print "graph_args --base 1000 -l 0"
    print "graph_vlabel Number"
    print "graph_category mongodb"
    print "graph_total total"

    for k in getModules():
        if k["hardware"]["gpu"] == 0:
            kname = k["_id"]
            print(kname + ".label " + k["name"])
            print(kname + ".info " + k["description"])
            print kname + ".type GAUGE"
            print kname + ".min 0"
            print kname + ".draw AREASTACK"

    kname = "hive_multireg"
    print(kname + ".label " + kname)
    print(kname + ".info " + kname)
    print kname + ".type GAUGE"
    print kname + ".min 0"
    print kname + ".draw AREASTACK"


if __name__ == "__main__":
    from os import environ
    if 'HIVE_DB_URI' in environ:
        uri = environ['HIVE_DB_URI']

    if len(sys.argv) > 1 and sys.argv[1] == "config":
        doConfig()
    else:
        doData()
