#!/usr/bin/env python

import sys
import os
import pymongo

def getModules():
    if 'HIVE_DB_URI' in os.environ:
        uri = os.environ['HIVE_DB_URI']
    c = pymongo.MongoClient(uri)
    proj = {"$project" : {"_id" : 1.0, "description" : "$description","name" : "$name"}}
    return c["hive"].get_collection("hiveavailablemodules").aggregate([proj])

def getModuleRequirements():
    if 'HIVE_DB_URI' in os.environ:
        uri = os.environ['HIVE_DB_URI']
    c = pymongo.MongoClient(uri)
    pipeline = [
        {"$project" : {
            "_id" : 1,
            "ram" : "$hardware.ram"}},
        {"$lookup" : {
            "from" : "hivejobs",
            "let" : {"label_mods" : "$_id"},
            "pipeline" : [
                {"$match" : {"state" : "active"}},
                {"$group" : {"_id" : "$current_module_name",
                             "count" : {"$sum" : 1.0}}},
                {"$match" : {"$expr" : {"$eq" : [{"$concat" : ["hive_",{"$substr" : ["$_id",5.0,-1.0]}]},
                                                 "$$label_mods"]}}}],
            "as" : "jobs"}},
        {"$unwind" : {"path" : "$jobs"}},
        {"$project" : {
            "_id" : 1.0,
            "module_count" : "$jobs.count",
            "ram_usage" : {"$multiply" : ["$jobs.count","$ram"]}}}]
    return c["hive"].get_collection("hiveavailablemodules").aggregate(pipeline)

def doData():
    for k in getModuleRequirements():
        if k["_id"] == "hive_api": continue
        print( k["_id"] + ".value " + str(k["ram_usage"]) )

def doConfig():
    print "graph_title Hive RAM utilization"
    print "graph_args --base 1000 -l 0"
    print "graph_vlabel Memory (Gb)"
    print "graph_category Hive"
    print "graph_total total"
    for k in getModules():
        kname = k["_id"]
        if kname == "hive_api": continue
        print(kname + ".label " + k["name"])
        print(kname + ".info " + k["description"])
        print kname + ".type GAUGE"
        print kname + ".min 0"
        print kname + ".draw AREASTACK"

if __name__ == "__main__":
    from os import environ
    if 'HIVE_DB_URI' in environ:
        uri = environ['HIVE_DB_URI']

    if len(sys.argv) > 1 and sys.argv[1] == "config":
        doConfig()
    else:
        doData()
